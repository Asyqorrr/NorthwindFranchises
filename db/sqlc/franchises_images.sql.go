// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: franchises_images.sql

package db

import (
	"context"
)

const deleteImages = `-- name: DeleteImages :exec
DELETE FROM franchises_images
	WHERE frim_id=$1
    RETURNING frim_id, frim_filename, frim_default, frim_frch_id
`

func (q *Queries) DeleteImages(ctx context.Context, frimID int32) error {
	_, err := q.db.Exec(ctx, deleteImages, frimID)
	return err
}

const findAllImages = `-- name: FindAllImages :many
SELECT frim_filename, frim_default FROM franchises_images
`

type FindAllImagesRow struct {
	FrimFilename *string `json:"frim_filename"`
	FrimDefault  *string `json:"frim_default"`
}

func (q *Queries) FindAllImages(ctx context.Context) ([]*FindAllImagesRow, error) {
	rows, err := q.db.Query(ctx, findAllImages)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*FindAllImagesRow
	for rows.Next() {
		var i FindAllImagesRow
		if err := rows.Scan(&i.FrimFilename, &i.FrimDefault); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const findImageById = `-- name: FindImageById :one
SELECT frim_filename, frim_default, frim_frch_id
	FROM franchises_images WHERE frim_id=$1
`

type FindImageByIdRow struct {
	FrimFilename *string `json:"frim_filename"`
	FrimDefault  *string `json:"frim_default"`
	FrimFrchID   *int32  `json:"frim_frch_id"`
}

func (q *Queries) FindImageById(ctx context.Context, frimID int32) (*FindImageByIdRow, error) {
	row := q.db.QueryRow(ctx, findImageById, frimID)
	var i FindImageByIdRow
	err := row.Scan(&i.FrimFilename, &i.FrimDefault, &i.FrimFrchID)
	return &i, err
}

const updateImages = `-- name: UpdateImages :one
UPDATE franchises_images
	SET frim_filename=$2,
    frim_default=$3
	WHERE frim_id=$1    
    RETURNING frim_id, frim_filename, frim_default, frim_frch_id
`

type UpdateImagesParams struct {
	FrimID       int32   `json:"frim_id"`
	FrimFilename *string `json:"frim_filename"`
	FrimDefault  *string `json:"frim_default"`
}

func (q *Queries) UpdateImages(ctx context.Context, arg UpdateImagesParams) (*FranchisesImage, error) {
	row := q.db.QueryRow(ctx, updateImages, arg.FrimID, arg.FrimFilename, arg.FrimDefault)
	var i FranchisesImage
	err := row.Scan(
		&i.FrimID,
		&i.FrimFilename,
		&i.FrimDefault,
		&i.FrimFrchID,
	)
	return &i, err
}

const uploadImages = `-- name: UploadImages :one
INSERT INTO franchises_images(
	 frim_filename, frim_default, frim_frch_id)
	VALUES ($1, $2, $3) RETURNING frim_id, frim_filename, frim_default, frim_frch_id
`

type UploadImagesParams struct {
	FrimFilename *string `json:"frim_filename"`
	FrimDefault  *string `json:"frim_default"`
	FrimFrchID   *int32  `json:"frim_frch_id"`
}

func (q *Queries) UploadImages(ctx context.Context, arg UploadImagesParams) (*FranchisesImage, error) {
	row := q.db.QueryRow(ctx, uploadImages, arg.FrimFilename, arg.FrimDefault, arg.FrimFrchID)
	var i FranchisesImage
	err := row.Scan(
		&i.FrimID,
		&i.FrimFilename,
		&i.FrimDefault,
		&i.FrimFrchID,
	)
	return &i, err
}
